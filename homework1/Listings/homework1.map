Component: ARM Compiler 6.12 Tool: armlink [5d624300]

==============================================================================

Section Cross References

    recursive.o(test_array) refers to recursive.o(NEW_ARRAY) for Array_Mem
    eventrecorder.o(.text.EventRecorderTimerSetup) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to rt_memclr.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventGetTS) refers to eventrecorder.o(.text.EventGetTS) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecordItem) refers to eventrecorder.o(.text.EventRecordItem) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecordData) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventCheckFilter) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventCheckFilter) refers to eventrecorder.o(.text.EventCheckFilter) for [Anonymous Symbol]
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.GetContext) refers to eventrecorder.o(.text.GetContext) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc32) refers to eventrecorder.o(.text.atomic_inc32) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    startup_armcm0plus.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_armcm0plus.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_armcm0plus.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_armcm0plus.o(RESET) refers to startup_armcm0plus.o(STACK) for __initial_sp
    startup_armcm0plus.o(RESET) refers to startup_armcm0plus.o(.text) for Reset_Handler
    startup_armcm0plus.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_armcm0plus.o(.text) refers to system_armcm0plus.o(.text.SystemInit) for SystemInit
    startup_armcm0plus.o(.text) refers to recursive.o(test_array) for __main
    system_armcm0plus.o(.text.SystemCoreClockUpdate) refers to system_armcm0plus.o(.data.SystemCoreClock) for SystemCoreClock
    system_armcm0plus.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_armcm0plus.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_armcm0plus.o(.text.SystemInit) refers to system_armcm0plus.o(.data.SystemCoreClock) for SystemCoreClock
    system_armcm0plus.o(.ARM.exidx.text.SystemInit) refers to system_armcm0plus.o(.text.SystemInit) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4


==============================================================================

Removing Unused input sections from the image.

    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerSetup), (16 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerGetFreq), (4 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerGetCount), (16 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderInitialize), (300 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderEnable), (88 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.text.EventGetTS), (56 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventGetTS), (8 bytes).
    Removing eventrecorder.o(.text.EventRecordItem), (256 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordItem), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStart), (44 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderDisable), (88 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (44 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (40 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.text.EventRecordData), (360 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.text.EventCheckFilter), (40 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventCheckFilter), (8 bytes).
    Removing eventrecorder.o(.text.GetContext), (32 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetContext), (8 bytes).
    Removing eventrecorder.o(.text.EventRecord2), (58 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.text.EventRecord4), (112 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing eventrecorder.o(.text.atomic_inc32), (28 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing startup_armcm0plus.o(HEAP), (3072 bytes).
    Removing system_armcm0plus.o(.text), (0 bytes).
    Removing system_armcm0plus.o(.text.SystemCoreClockUpdate), (16 bytes).
    Removing system_armcm0plus.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_armcm0plus.o(.ARM.exidx.text.SystemInit), (8 bytes).

40 unused section(s) (total 4822 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    RTE\Device\ARMCM0P\startup_ARMCM0plus.s  0x00000000   Number         0  startup_armcm0plus.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    recursive.s                              0x00000000   Number         0  recursive.o ABSOLUTE
    system_ARMCM0plus.c                      0x00000000   Number         0  system_armcm0plus.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_armcm0plus.o(RESET)
    .text                                    0x000000c0   Section       48  startup_armcm0plus.o(.text)
    .text                                    0x000000f0   Section        0  heapauxi.o(.text)
    [Anonymous Symbol]                       0x000000f8   Section        0  system_armcm0plus.o(.text.SystemInit)
    __arm_cp.1_0                             0x00000100   Number         4  system_armcm0plus.o(.text.SystemInit)
    __arm_cp.1_1                             0x00000104   Number         4  system_armcm0plus.o(.text.SystemInit)
    test_array                               0x00000108   Section       72  recursive.o(test_array)
    __tagsym$$used.0                         0x00000150   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    Array_Mem                                0x20000004   Data           9  recursive.o(NEW_ARRAY)
    NEW_ARRAY                                0x20000004   Section        9  recursive.o(NEW_ARRAY)
    __Array_End                              0x2000000d   Data           0  recursive.o(NEW_ARRAY)
    EventBuffer                              0x20000040   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x20000040   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x20000440   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x200004c0   Data          36  eventrecorder.o(.bss.noinit)
    TimeStamp                                0x200004e4   Data           4  eventrecorder.o(.bss.noinit)
    STACK                                    0x200004e8   Section     1024  startup_armcm0plus.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_armcm0plus.o(RESET)
    Reset_Handler                            0x000000c1   Thumb Code     8  startup_armcm0plus.o(.text)
    __Vectors_End                            0x000000c0   Data           0  startup_armcm0plus.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_armcm0plus.o ABSOLUTE
    NMI_Handler                              0x000000c9   Thumb Code     2  startup_armcm0plus.o(.text)
    HardFault_Handler                        0x000000cb   Thumb Code     2  startup_armcm0plus.o(.text)
    SVC_Handler                              0x000000cd   Thumb Code     2  startup_armcm0plus.o(.text)
    PendSV_Handler                           0x000000cf   Thumb Code     2  startup_armcm0plus.o(.text)
    SysTick_Handler                          0x000000d1   Thumb Code     2  startup_armcm0plus.o(.text)
    Interrupt0_Handler                       0x000000d3   Thumb Code     2  startup_armcm0plus.o(.text)
    Interrupt1_Handler                       0x000000d5   Thumb Code     2  startup_armcm0plus.o(.text)
    Interrupt2_Handler                       0x000000d7   Thumb Code     2  startup_armcm0plus.o(.text)
    Interrupt3_Handler                       0x000000d9   Thumb Code     2  startup_armcm0plus.o(.text)
    Interrupt4_Handler                       0x000000db   Thumb Code     2  startup_armcm0plus.o(.text)
    Interrupt5_Handler                       0x000000dd   Thumb Code     2  startup_armcm0plus.o(.text)
    Interrupt6_Handler                       0x000000df   Thumb Code     2  startup_armcm0plus.o(.text)
    Interrupt7_Handler                       0x000000e1   Thumb Code     2  startup_armcm0plus.o(.text)
    Interrupt8_Handler                       0x000000e3   Thumb Code     2  startup_armcm0plus.o(.text)
    Interrupt9_Handler                       0x000000e5   Thumb Code     2  startup_armcm0plus.o(.text)
    __use_two_region_memory                  0x000000f1   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x000000f3   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x000000f5   Thumb Code     2  heapauxi.o(.text)
    SystemInit                               0x000000f9   Thumb Code    16  system_armcm0plus.o(.text.SystemInit)
    __main                                   0x00000109   Thumb Code    62  recursive.o(test_array)
    EventRecorderInfo                        0x00000150   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    SystemCoreClock                          0x20000000   Data           4  system_armcm0plus.o(.data.SystemCoreClock)
    __stack_limit                            0x200004e8   Data           0  startup_armcm0plus.o(STACK)
    __initial_sp                             0x200008e8   Data           0  startup_armcm0plus.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_1 (Base: 0x00000000, Size: 0x00000178, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000168, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO           55    RESET               startup_armcm0plus.o
    0x000000c0   0x000000c0   0x00000030   Code   RO           56  * .text               startup_armcm0plus.o
    0x000000f0   0x000000f0   0x00000006   Code   RO           81    .text               c_p.l(heapauxi.o)
    0x000000f6   0x000000f6   0x00000002   PAD
    0x000000f8   0x000000f8   0x00000010   Code   RO           63    .text.SystemInit    system_armcm0plus.o
    0x00000108   0x00000108   0x00000048   Code   RO            2  * test_array          recursive.o
    0x00000150   0x00000150   0x00000018   Data   RO           44    .rodata.EventRecorderInfo  eventrecorder.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00000168, Size: 0x00000010, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000168   0x00000004   Data   RW           65    .data.SystemCoreClock  system_armcm0plus.o
    0x20000004   0x0000016c   0x00000009   Data   RW            1    NEW_ARRAY           recursive.o


    Execution Region ER_ZI (Exec base: 0x20000040, Load base: 0x00000178, Size: 0x000008a8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000040        -       0x000004a8   Zero   RW           43    .bss.noinit         eventrecorder.o
    0x200004e8        -       0x00000400   Zero   RW           53    STACK               startup_armcm0plus.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0         24          0       1192       9357   eventrecorder.o
        72         10          0          9          0        352   recursive.o
        48         10        192          0       1024        996   startup_armcm0plus.o
        16          8          0          4          0        668   system_armcm0plus.o

    ----------------------------------------------------------------------
       136         28        216         16       2216      11373   Object Totals
         0          0          0          0          0          0   (incl. Generated)
         0          0          0          3          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         6          0          0          0          0        136   heapauxi.o

    ----------------------------------------------------------------------
         8          0          0          0          0        136   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

         6          0          0          0          0        136   c_p.l

    ----------------------------------------------------------------------
         8          0          0          0          0        136   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

       144         28        216         16       2216      11457   Grand Totals
       144         28        216         16       2216      11457   ELF Image Totals
       144         28        216         16          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                  360 (   0.35kB)
    Total RW  Size (RW Data + ZI Data)              2232 (   2.18kB)
    Total ROM Size (Code + RO Data + RW Data)        376 (   0.37kB)

==============================================================================

